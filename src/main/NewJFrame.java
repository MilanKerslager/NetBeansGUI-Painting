// Example with 2D drawing in Java and swing

package main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.GeneralPath;

public class NewJFrame extends javax.swing.JFrame {

    public NewJFrame() {
        initComponents();
    }

    // method paint is invoked every time painting is needed
    // ie. after the window is created or after resizing the window
    @Override
    public void paint(Graphics g) {
        // Graphics2D is as Graphics, but has a lot more methods
        Graphics2D g2d = (Graphics2D) g;
        
        // the size of the window
        int jFrameWidth = getWidth();
        int jFrameHeight = getHeight();
        // set the ink color for the next drawing
        g.setColor(Color.RED);
        // draw a string, last two are parameters (x,y)
        g.drawString("Java Graphics: "+jFrameWidth+"x"+jFrameHeight, 10, 50);
        g.drawString("Try to resize window", 200, 300);

        g.setColor(Color.BLACK);
        // line from (x1,y1) to (x2,y2)
        g.drawLine(250, 250, 350, 150);
        // rectangle (x, y, xwidth, ylength), upper left corner at (x,y)
        g.drawRect(15, 60, 100, 40);
        // rounded edged rectangle (last two are arcWidth, arcHeight)
        g.drawRoundRect(130, 60, 100, 40, 10, 20);
        // circle at the center of the jFrame
        // experimental justification of the drawing area on Windows 8.1
        g.drawRect(8, 31, jFrameWidth-17, jFrameHeight-40);

        g.setColor(Color.BLUE);
        // point in the center of the jFrame
        g.drawLine(jFrameWidth/2, jFrameHeight/2, jFrameWidth/2, jFrameHeight/2);
        // circle inside imaginary rectangle (parameters for rectangle)
        // last two (xwidth,ylenght) are the same -> circle
        g.drawOval(jFrameWidth/2-50, jFrameHeight/2-50, 100, 100);
        // filled oval (last two are xwidth, ylenght)
        g.fillOval(50, jFrameHeight/3, 30, 60);
        
        g.setColor(Color.GREEN);
        // polygon, third parameter is number of line segments
        int []x = {270,285,300,315,330,345};
        int []y = {60,105,105,110,95,95};
        g.drawPolygon(x,y,6);
        
        // arc inside imaginary rectangle, last two are degrees (start, start+arc)
        g.drawArc(10, 250, 100, 100, 0, 90);
        
        // moving to position and creating a line from previous position
        GeneralPath tooths = new GeneralPath();
        tooths.moveTo(10, 200);
        for (int i=1;i<=10;i++) {
            tooths.lineTo(i*20, 180);
            tooths.lineTo(i*20+10, 200);
        }
        tooths.closePath();
        g2d.fill(tooths);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
